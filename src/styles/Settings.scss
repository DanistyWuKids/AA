@import './global.scss';

@mixin borderSeparate {
  padding-bottom: 12px;
  margin-bottom: 12px;
  border-bottom: 1px solid $borderCol;
}


.settingsContainer {
  // Position
  position: absolute;
  display: block;
  z-index: 10;
  right: $headerOffset/2;
  top: $headerHeight + $headerOffset;
  
  // Dimension
  max-height: calc(100vh - 62px - 100px);
  width: 250px;

  // Styling
  overflow-y: auto;
  overflow-x: hidden;
  background: #FFFFFF;
  border: 1px solid #ccc;
  border-color: $borderCol;
  @include border-radius(4px);
  filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.1));
  padding: 16px;
  font-size: 0.95em;
}


.setContainer {
  @include borderSeparate;

  .label {
    margin: 4px 0 8px;
    text-transform: uppercase;
    font-size: 0.78em;
    font-weight: 500;
    color: #606060;
  }
}





.fontSize {
  display: flex;
  justify-content: space-between;
  $btnRad: 8px;

  .fontBtn {
    @include removeBtnStyling;
    cursor: pointer;
    flex: 1;
    padding: 6px 0;
    background-color: rgb(237, 237, 237);
    display: flex;
    justify-content: center;

    svg {
      path {
        fill: #5b5b5b;
      }
    }

  }

  .fontBtn:active {
    background-color: rgb(220, 220, 220);

  }


  .small {

    svg {
      height: 1.1em;
      width: 1.1em;
    }
  }


  .big {
    svg {
      height: 1.3em;
      width: 1.3em;
    }
  }

  .label {

  }

}

$btnSize: 48px;
$outerBorder: 2px;

.algoCol {
  display: grid;
  grid-template-columns: repeat(4, $btnSize);
  grid-gap: 12px;
  grid-auto-rows: minmax($btnSize, auto);
  justify-content: center;
  align-content: center;

  .colorBtn {
    @include removeBtnStyling;
    border: $outerBorder solid $white;
    display:flex;
    @include border-radius(50%);
    cursor: pointer;
    padding: $outerBorder;
    height: $btnSize;
    width: $btnSize;

    .left {
      @include border-radii($btnSize,0,0,$btnSize);
      height: $btnSize - ($outerBorder * 4);
      width: $btnSize /2 - ($outerBorder * 2);
    }

    .right {
      height: $btnSize - ($outerBorder * 4);
      width: $btnSize /2 - ($outerBorder * 2);
      @include border-radii(0,$btnSize,$btnSize,0);

    }

  }

  .active {
    border: $outerBorder solid $sigBlue;
  }


}

// asdassda
.settingFooter {
  display: flex;

  .saveBtn {
    @include removeBtnStyling;
    padding: 8px 0;
    flex: 1;
    cursor: pointer;
    text-transform: uppercase;
    background-color: rgb(237, 237, 237);
    font-size: 0.82em;
    color: #454545;

  }

  .saveBtn:active {
    background-color: rgb(220, 220, 220);

  }
}


.red {
  background: #a4092d;
}

.yellow {
  background: #F1F511;
}

.green {
  background: #39E787;
}

.pink {
  background: #E26FF1;
}

.cyan {
  background: #2BB2E9;
}

.blue {
  background: #2962FF;
}

.black {
  background: #505050;
}

.grey {
  background: #BBBBBB;
}

.white {
  background: #cecece;
}